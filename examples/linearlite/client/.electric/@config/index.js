/*
  Autogenerated ElectricSQL config file. Don't edit this
  file directly. Instead, use the `electric` CLI tool
  to manage your config and migrations.

  See https://electric-sql.com/docs for more information.
*/

export default {
  "app": "linearlite",
  "build": "local",
  "console": {
    "host": "127.0.0.1",
    "port": 4000,
    "ssl": false
  },
  "debug": false,
  "env": "local",
  "migrations": [
    {
      "encoding": "escaped",
      "name": "20230515_123048_572_init",
      "postgres_body": null,
      "satellite_body": [
        "CREATE TABLE issue (\n    id TEXT PRIMARY KEY NOT NULL,\n    name TEXT NOT NULL,\n    priority TEXT NOT NULL,\n    title TEXT NOT NULL,\n    description TEXT NOT NULL,\n    status TEXT NOT NULL\n) WITHOUT ROWID;",
        "DROP TABLE IF EXISTS _electric_trigger_settings;",
        "CREATE TABLE _electric_trigger_settings(tablename STRING PRIMARY KEY, flag INTEGER);",
        "INSERT INTO _electric_trigger_settings(tablename,flag) VALUES ('main.issue', 1);",
        "DROP TRIGGER IF EXISTS update_ensure_main_issue_primarykey;",
        "CREATE TRIGGER update_ensure_main_issue_primarykey\n   BEFORE UPDATE ON main.issue\nBEGIN\n  SELECT\n    CASE\n      WHEN old.id != new.id THEN\n        RAISE (ABORT,'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
        "DROP TRIGGER IF EXISTS insert_main_issue_into_oplog;",
        "CREATE TRIGGER insert_main_issue_into_oplog\n   AFTER INSERT ON main.issue\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.issue')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'issue', 'INSERT', json_object('id', new.id), json_object('id', new.id, 'name', new.name, 'priority', new.priority, 'title', new.title, 'description', new.description, 'status', new.status), NULL, NULL);\nEND;",
        "DROP TRIGGER IF EXISTS update_main_issue_into_oplog;",
        "CREATE TRIGGER update_main_issue_into_oplog\n   AFTER UPDATE ON main.issue\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.issue')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'issue', 'UPDATE', json_object('id', new.id), json_object('id', new.id, 'name', new.name, 'priority', new.priority, 'title', new.title, 'description', new.description, 'status', new.status), json_object('id', old.id, 'name', old.name, 'priority', old.priority, 'title', old.title, 'description', old.description, 'status', old.status), NULL);\nEND;",
        "DROP TRIGGER IF EXISTS delete_main_issue_into_oplog;",
        "CREATE TRIGGER delete_main_issue_into_oplog\n   AFTER DELETE ON main.issue\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.issue')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'issue', 'DELETE', json_object('id', old.id), NULL, json_object('id', old.id, 'name', old.name, 'priority', old.priority, 'title', old.title, 'description', old.description, 'status', old.status), NULL);\nEND;"
      ],
      "sha256": "e70387e2cdc278c0e543c9549569b5a4f9c224740dbfd9e806b7c9c223937f2c",
      "title": "init"
    }
  ],
  "replication": {
    "host": "127.0.0.1",
    "port": 5133,
    "ssl": false
  }
}
